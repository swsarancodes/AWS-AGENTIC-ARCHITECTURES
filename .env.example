# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_access_key_here
AWS_SECRET_ACCESS_KEY=your_secret_key_here
AWS_SESSION_TOKEN=your_session_token_here

# AWS Bedrock Configuration
BEDROCK_REGION=us-east-1
BEDROCK_MODEL_ID=anthropic.claude-3-sonnet-20240229-v1:0
BEDROCK_MODEL_ID_HAIKU=anthropic.claude-3-haiku-20240307-v1:0
BEDROCK_MODEL_ID_OPUS=anthropic.claude-3-opus-20240229-v1:0
BEDROCK_EMBEDDING_MODEL_ID=amazon.titan-embed-text-v2:0
BEDROCK_MAX_TOKENS=4096
BEDROCK_TEMPERATURE=0.7
BEDROCK_TOP_P=0.9

# Alternative Models (uncomment to use)
# BEDROCK_MODEL_ID=amazon.titan-text-premier-v1:0
# BEDROCK_MODEL_ID=meta.llama3-70b-instruct-v1:0
# BEDROCK_MODEL_ID=cohere.command-r-plus-v1:0

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=false
API_LOG_LEVEL=info
API_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]

# Database Configuration (for memory patterns)
DATABASE_URL=postgresql://user:password@localhost:5432/agents_db
REDIS_URL=redis://localhost:6379/0
VECTOR_DB_URL=http://localhost:8080

# Neptune Graph Database (for graph memory pattern)
NEPTUNE_ENDPOINT=your-neptune-cluster.region.neptune.amazonaws.com
NEPTUNE_PORT=8182
NEPTUNE_IAM_AUTH=true

# Memory Configuration
MEMORY_BACKEND=redis
MEMORY_TTL=3600
VECTOR_STORE_TYPE=chroma
EMBEDDING_DIMENSION=1536

# Web Search Configuration (Bedrock Knowledge Bases)
WEB_SEARCH_ENABLED=true
KNOWLEDGE_BASE_ID=your_bedrock_knowledge_base_id
KNOWLEDGE_BASE_REGION=us-east-1

# Monitoring & Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
CLOUDWATCH_LOG_GROUP=/aws/lambda/agentic-patterns
METRICS_ENABLED=true
TRACING_ENABLED=true

# Security
JWT_SECRET_KEY=your-super-secure-jwt-secret-key-here
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24
ENCRYPTION_KEY=your-32-char-encryption-key-here
API_KEY_HEADER=X-API-Key

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=3600

# Development/Testing
ENVIRONMENT=development
DEBUG=false
TESTING=false
PYTEST_MARKERS=unit,integration

# Evaluation Configuration
EVALUATION_ENABLED=true
BENCHMARK_DATASET_PATH=evaluation/datasets/
EVALUATION_METRICS=accuracy,latency,cost
EVALUATION_OUTPUT_PATH=evaluation/results/

# Docker Configuration
DOCKER_REGISTRY=your-account.dkr.ecr.us-east-1.amazonaws.com
DOCKER_TAG=latest
COMPOSE_PROJECT_NAME=agentic-patterns

# Kubernetes Configuration
K8S_NAMESPACE=agentic-patterns
K8S_CLUSTER_NAME=agentic-cluster
K8S_SERVICE_ACCOUNT=agentic-service-account

# Cost Management
COST_TRACKING_ENABLED=true
MONTHLY_BUDGET_LIMIT=1000
COST_ALERT_THRESHOLD=80

# Performance Tuning
MAX_CONCURRENT_REQUESTS=10
REQUEST_TIMEOUT=300
RETRY_ATTEMPTS=3
RETRY_DELAY=1

# Pattern-Specific Configuration
REFLECTION_MAX_ITERATIONS=3
TOOL_TIMEOUT=30
REACT_MAX_STEPS=10
PLANNING_MAX_DEPTH=5
TREE_SEARCH_DEPTH=3
MULTI_AGENT_MAX_AGENTS=5
ENSEMBLE_MODELS=3
MEMORY_CONTEXT_LENGTH=10000

# Streamlit Demo Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=0.0.0.0
STREAMLIT_THEME_BASE=light

# Notification Configuration
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url
EMAIL_SMTP_SERVER=smtp.gmail.com
EMAIL_SMTP_PORT=587
EMAIL_USERNAME=your-email@gmail.com
EMAIL_PASSWORD=your-app-password

# S3 Configuration (for data storage)
S3_BUCKET_NAME=agentic-patterns-data
S3_BUCKET_REGION=us-east-1
S3_PREFIX=patterns/

# Lambda Configuration
LAMBDA_MEMORY_SIZE=1024
LAMBDA_TIMEOUT=300
LAMBDA_RUNTIME=python3.11

# SageMaker Configuration
SAGEMAKER_EXECUTION_ROLE=arn:aws:iam::account:role/SageMakerExecutionRole
SAGEMAKER_INSTANCE_TYPE=ml.t3.medium
SAGEMAKER_INSTANCE_COUNT=1